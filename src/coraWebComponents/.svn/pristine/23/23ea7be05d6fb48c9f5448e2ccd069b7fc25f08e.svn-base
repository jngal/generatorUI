import './Input.scss';

import { Input } from '@progress/kendo-react-inputs';
import PropTypes from 'prop-types';
import React from 'react';

class InputComponent extends React.Component {
  
  onBlur = () => {
    if(this.props.onBlur) {
      this.props.onBlur();
    }
  }

  render() {
    return (
      <Input
        className={`input ${this.props.disabled ? 'disabled-field' : ''} `}
        validationMessage={this.props.validationMessage || 'PovinnÃ©'}
        required={this.props.required}
        onChange={(e) => this.props.onChange(this.props.name, e.target.value)}
        value={this.props.value !== null ? this.props.value : ''}
        disabled={this.props.disabled}
        type={this.props.type}
        placeholder={this.props.placeholder}
        onClick={this.props.onClick}
        autoFocus={this.props.autofocus}
        minLength={this.props.minLength}
        maxLength={this.props.maxLength}
        pattern={this.props.pattern}
        tabIndex={this.props.tabIndex}
        onBlur={this.onBlur}
      />
    );
  }
}

InputComponent.propTypes = {
  validationMessage: PropTypes.string,
  name: PropTypes.string.isRequired,
  required: PropTypes.bool,
  onChange: PropTypes.func.isRequired,
  value: PropTypes.oneOfType([
    PropTypes.string,
    PropTypes.number,
  ]),
  disabled: PropTypes.bool,
  type: PropTypes.string,
  placeholder: PropTypes.string,
  onClick: PropTypes.func,
  autofocus: PropTypes.bool,
  minLength: PropTypes.number,
  maxLength: PropTypes.number,
  pattern: PropTypes.string,
  tabIndex: PropTypes.number,
  isPicker: PropTypes.bool,
  onBlur: PropTypes.func
}

export default InputComponent;