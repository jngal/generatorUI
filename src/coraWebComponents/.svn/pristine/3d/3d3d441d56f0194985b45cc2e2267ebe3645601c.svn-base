<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <title>JSDoc: Source: views/login/Login.js</title>

    <script src="scripts/prettify/prettify.js"> </script>
    <script src="scripts/prettify/lang-css.js"> </script>
    <!--[if lt IE 9]>
      <script src="//html5shiv.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]-->
    <link type="text/css" rel="stylesheet" href="styles/prettify-tomorrow.css">
    <link type="text/css" rel="stylesheet" href="styles/jsdoc-default.css">
</head>

<body>

<div id="main">

    <h1 class="page-title">Source: views/login/Login.js</h1>

    



    
    <section>
        <article>
            <pre class="prettyprint source linenums"><code>import * as React from 'react';
import PropTypes from 'prop-types';
import Input from '../../forms/Input';
import Switch from '../../forms/Switch';
import Button from '../../buttons/Button';
import withRouter from '../../utils/withRouter';
import LoadingPanel from '../../LoadingPanel';
import './Login.scss';
import { getClientVersion } from '../../utils/helper';

const USERNAME_KEY = 'username';

/**
 * Login component
 * @module
 * @param {object} [user] - User
 * @param {bool} isLoading - Is loading?
 * @param {element} header - Header element
 * @param {bool} [rememberDisabled] - Remember disabled
 * @param {func} signIn - Sign in function
 * @param {func} [verifyCode] - Verify code function
 * @param {func} [createCode] - Create code function
 * @param {object} [afterLoginlocation] - After login location
 * @param {string} [userNameLabel] - User name label, "Prihlasovacie meno" if not provided
 * @param {string} [passwordLabel] - Password label, "Heslo" if not provided
 * @param {string} [registrationLabel] - Registration label, "Registrácia" if not provided
 * @param {bool} [showRegistrationLabel] - Should registration table show? 
 * @param {string} [registrationPath] - Registration path, empty if not provided
 */
class Login extends React.Component {
  constructor(props) {
    super(props);

    const username = props.rememberDisabled ? '' : localStorage.getItem(USERNAME_KEY);
    const urlParams = new URLSearchParams(this.props.location.search);

    this.state = {
      username: username || '',
      password: '',
      remember: username !== null,
      code: urlParams.get("code"),
    };
  }

  handleChange = (name, value) => {
    this.setState({ [name]: value });
  };

  async componentDidMount() {
    const { code } = this.state;

    if (code) {
      await this.props.verifyCode(code);
      if (this.props.user !== null) {
        this.props.history.replace('/');
      }
    }
  }

  render() {
    const { code } = this.state;

    return (
      &lt;div className="row m-0">
        &lt;div className="col-4 offset-4 p-0">
          &lt;div className="card login">
            &lt;div className="card-body">
              &lt;div className="card-title">
                &lt;div>
                  {this.props.header}
                &lt;/div>
                &lt;div style={{float: 'right', fontSize: 12, paddingRight: 16}}>
                  {getClientVersion()}
                &lt;/div>
              &lt;/div>
              {!code &amp;&amp;
                &lt;form className="k-form" onSubmit={this.handleSubmit}>
                  &lt;div className="k-form-field">
                  &lt;span>{this.props.userNameLabel || "Prihlasovacie meno"}&lt;/span>
                    &lt;Input
                      name="username"
                      required={true}
                      onChange={this.handleChange}
                      value={this.state.username}
                    />
                  &lt;/div>
                  &lt;div className="k-form-field">
                    &lt;span>{this.props.passwordLabel || "Heslo"}&lt;/span>
                    &lt;Input
                      type="password"
                      name="password"
                      onChange={this.handleChange}
                      value={this.state.password}
                    />
                  &lt;/div>
                  {!this.props.rememberDisabled &amp;&amp;
                    &lt;div className="k-form-field form-boolean">
                      &lt;span className="title">Zapamätaj si ma&lt;/span>
                      &lt;Switch
                        name='remember'
                        onChange={this.handleChange}
                        value={this.state.remember}
                      />
                    &lt;/div>
                  }
                  &lt;div className="k-form-field">
                    &lt;div className="footerContainer">
                      {this.props.showRegistrationLabel &amp;&amp;     
                        &lt;a className="registration" href={`#${this.props.registrationPath || ''}`}>
                          {this.props.registrationLabel || "Registrácia"}
                        &lt;/a>
                      }
                      &lt;Button
                        primary={true}
                        disabled={this.props.isLoading}
                        label="Prihlásiť"
                        type="submit"
                      />
                    &lt;/div>
                  &lt;/div>
                  {this.props.createCode &amp;&amp;
                    &lt;Button
                      disabled={this.props.isLoading || (this.state.username === null || this.state.username === "")}
                      label="Zabudnuté heslo"
                      onClick={this.handleCreateCode}
                    />
                  }
                &lt;/form>
              }
              &lt;LoadingPanel isLoading={this.props.isLoading} />
            &lt;/div>
          &lt;/div>
        &lt;/div>
      &lt;/div>
    );
  }

  handleCreateCode = async () => {
    const username = this.state.username.trim();
    this.props.createCode(username);
    alert("Na Váš Email Vám bol odoslaný kód na jednorazové prihlásenie.");
  }

  handleSubmit = async (event) => {
    event.preventDefault();

    const username = this.state.username.trim();
    const password = this.state.password;

    await this.props.signIn(username, password);
    if (this.props.user !== null) {
      if (!this.props.rememberDisabled) {
        if (this.state.remember) {
          localStorage.setItem(USERNAME_KEY, username);
        }
        else {
          localStorage.removeItem(USERNAME_KEY);
        }
      }

      const afterLoginLocation = this.props.location.state &amp;&amp; this.props.location.state.from &amp;&amp; 
        (this.props.location.state.from.pathname === "/" || this.props.location.state.from.pathname === "/prihlasenie" || this.props.location.state.from.pathname === "/login") 
        ? this.props.afterLoginlocation : this.props.location.state;

      const { from } = afterLoginLocation || { from: { pathname: `${this.props.pathAfterLogin || '/'}` } };

      this.props.history.replace(from);
    }
  }
}

Login.propTypes = {
  user: PropTypes.object,
  isLoading: PropTypes.bool.isRequired,
  header: PropTypes.element.isRequired,
  rememberDisabled: PropTypes.bool,
  signIn: PropTypes.func.isRequired,
  verifyCode: PropTypes.func,
  createCode: PropTypes.func,
  afterLoginlocation: PropTypes.object,
  userNameLabel: PropTypes.string,
  passwordLabel: PropTypes.string,
  registrationLabel: PropTypes.string,
  showRegistrationLabel: PropTypes.bool,
  registrationPath: PropTypes.string,
  pathAfterLogin: PropTypes.string,
}

export default withRouter(Login);</code></pre>
        </article>
    </section>




</div>

<nav>
    <h2><a href="index.html">Home</a></h2><h3>Modules</h3><ul><li><a href="module-Alert.html">Alert</a></li><li><a href="module-animation_Slide.html">animation/Slide</a></li><li><a href="module-buttons_Button.html">buttons/Button</a></li><li><a href="module-buttons_ButtonGroup.html">buttons/ButtonGroup</a></li><li><a href="module-buttons_DropDownButton.html">buttons/DropDownButton</a></li><li><a href="module-buttons_SplitButton.html">buttons/SplitButton</a></li><li><a href="module-ChangePassword.html">ChangePassword</a></li><li><a href="module-chart_ChartComponent.html">chart/ChartComponent</a></li><li><a href="module-chart_elements_ChartCategoryAxisComponent.html">chart/elements/ChartCategoryAxisComponent</a></li><li><a href="module-chart_elements_ChartLegendComponent.html">chart/elements/ChartLegendComponent</a></li><li><a href="module-chart_elements_ChartSeriesComponent.html">chart/elements/ChartSeriesComponent</a></li><li><a href="module-chart_elements_ChartTitleComponent.html">chart/elements/ChartTitleComponent</a></li><li><a href="module-Container.html">Container</a></li><li><a href="module-detail_Detail.html">detail/Detail</a></li><li><a href="module-detail_DetailWrapper.html">detail/DetailWrapper</a></li><li><a href="module-detail_Toolbar.html">detail/Toolbar</a></li><li><a href="module-detail_ValidationMessage.html">detail/ValidationMessage</a></li><li><a href="module-dialogs_ConfirmDialog.html">dialogs/ConfirmDialog</a></li><li><a href="module-dialogs_Dialog.html">dialogs/Dialog</a></li><li><a href="module-dialogs_DialogContent.html">dialogs/DialogContent</a></li><li><a href="module-dialogs_EmailPrompt.html">dialogs/EmailPrompt</a></li><li><a href="module-dialogs_FileContent.html">dialogs/FileContent</a></li><li><a href="module-dialogs_FileDialog.html">dialogs/FileDialog</a></li><li><a href="module-dialogs_ReportDialog.html">dialogs/ReportDialog</a></li><li><a href="module-Dropdown.html">Dropdown</a></li><li><a href="module-forms_Autocomplete.html">forms/Autocomplete</a></li><li><a href="module-forms_AutocompleteLocal.html">forms/AutocompleteLocal</a></li><li><a href="module-forms_Checkbox.html">forms/Checkbox</a></li><li><a href="module-forms_DatePicker.html">forms/DatePicker</a></li><li><a href="module-forms_DateRangePicker.html">forms/DateRangePicker</a></li><li><a href="module-forms_DateTimePicker.html">forms/DateTimePicker</a></li><li><a href="module-forms_DropDownList.html">forms/DropDownList</a></li><li><a href="module-forms_Input.html">forms/Input</a></li><li><a href="module-forms_MultiSelect.html">forms/MultiSelect</a></li><li><a href="module-forms_NumericTextBox.html">forms/NumericTextBox</a></li><li><a href="module-forms_Picker.html">forms/Picker</a></li><li><a href="module-forms_Switch.html">forms/Switch</a></li><li><a href="module-forms_Textarea.html">forms/Textarea</a></li><li><a href="module-forms_TimePicker.html">forms/TimePicker</a></li><li><a href="module-forms_Upload.html">forms/Upload</a></li><li><a href="module-graph_ArcGauage.html">graph/ArcGauage</a></li><li><a href="module-grid_Cell.html">grid/Cell</a></li><li><a href="module-grid_ColumnMenu.html">grid/ColumnMenu</a></li><li><a href="module-grid_DialogFilter.html">grid/DialogFilter</a></li><li><a href="module-grid_DialogFilterForm.html">grid/DialogFilterForm</a></li><li><a href="module-grid_DropdownFilterCell.html">grid/DropdownFilterCell</a></li><li><a href="module-grid_EditBooleanCell.html">grid/EditBooleanCell</a></li><li><a href="module-grid_EditCommandCell.html">grid/EditCommandCell</a></li><li><a href="module-grid_EditDateTimeCell.html">grid/EditDateTimeCell</a></li><li><a href="module-grid_EditDropdownCell.html">grid/EditDropdownCell</a></li><li><a href="module-grid_EditPickerCell.html">grid/EditPickerCell</a></li><li><a href="module-grid_EditTimeCell.html">grid/EditTimeCell</a></li><li><a href="module-grid_FileCell.html">grid/FileCell</a></li><li><a href="module-grid_Grid.html">grid/Grid</a></li><li><a href="module-grid_GridWrapper.html">grid/GridWrapper</a></li><li><a href="module-grid_RangeFilterCell.html">grid/RangeFilterCell</a></li><li><a href="module-grid_SaveFilterDialog.html">grid/SaveFilterDialog</a></li><li><a href="module-grid_SelectionMenu.html">grid/SelectionMenu</a></li><li><a href="module-grid_Toolbar.html">grid/Toolbar</a></li><li><a href="module-grid_TooltipCell.html">grid/TooltipCell</a></li><li><a href="module-LoadingPanel.html">LoadingPanel</a></li><li><a href="module-metabase_Dashboard.html">metabase/Dashboard</a></li><li><a href="module-navigation_Hamburger.html">navigation/Hamburger</a></li><li><a href="module-navigation_Manual.html">navigation/Manual</a></li><li><a href="module-navigation_ManualDialogList.html">navigation/ManualDialogList</a></li><li><a href="module-navigation_ManualList.html">navigation/ManualList</a></li><li><a href="module-navigation_ManualPDF.html">navigation/ManualPDF</a></li><li><a href="module-navigation_ManualWrapper.html">navigation/ManualWrapper</a></li><li><a href="module-navigation_Navigation.html">navigation/Navigation</a></li><li><a href="module-navigation_Search.html">navigation/Search</a></li><li><a href="module-navigation_User.html">navigation/User</a></li><li><a href="module-RefreshDialog.html">RefreshDialog</a></li><li><a href="module-sch_ApprovalProcessStep.html">sch/ApprovalProcessStep</a></li><li><a href="module-sch_ApprovalProcessTimeline.html">sch/ApprovalProcessTimeline</a></li><li><a href="module-scheduler_Scheduler.html">scheduler/Scheduler</a></li><li><a href="module-Settings.html">Settings</a></li><li><a href="module-sidebar_Appmenu.html">sidebar/Appmenu</a></li><li><a href="module-sidebar_Footer.html">sidebar/Footer</a></li><li><a href="module-sidebar_header_Appmenu.html">sidebar/header/Appmenu</a></li><li><a href="module-sidebar_header_Header.html">sidebar/header/Header</a></li><li><a href="module-sidebar_header_SidebarToggle.html">sidebar/header/SidebarToggle</a></li><li><a href="module-sidebar_menu_Menu.html">sidebar/menu/Menu</a></li><li><a href="module-sidebar_menu_Search.html">sidebar/menu/Search</a></li><li><a href="module-sidebar_Sidebar.html">sidebar/Sidebar</a></li><li><a href="module-sidebar_Stats.html">sidebar/Stats</a></li><li><a href="module-Tab.html">Tab</a></li><li><a href="module-Tabs.html">Tabs</a></li><li><a href="module-TabsWrapper.html">TabsWrapper</a></li><li><a href="module-TitlePanel.html">TitlePanel</a></li><li><a href="module-utils_convert.html">utils/convert</a></li><li><a href="module-utils_coraError.html">utils/coraError</a></li><li><a href="module-utils_eventEmitter.html">utils/eventEmitter</a></li><li><a href="module-utils_flags.html">utils/flags</a></li><li><a href="module-utils_helper.html">utils/helper</a></li><li><a href="module-utils_logger.html">utils/logger</a></li><li><a href="module-utils_requests.html">utils/requests</a></li><li><a href="module-utils_storage.html">utils/storage</a></li><li><a href="module-ValidationAlert.html">ValidationAlert</a></li><li><a href="module-views_login_Login.html">views/login/Login</a></li><li><a href="module-views_registration_Registration.html">views/registration/Registration</a></li></ul><h3>Classes</h3><ul><li><a href="module-utils_coraError.html">utils/coraError</a></li><li><a href="module-utils_eventEmitter-ExtendedEventEmitter.html">ExtendedEventEmitter</a></li></ul><h3>Global</h3><ul><li><a href="global.html#getPreprocessedMenuData-zkorenamenuvyrobinovudatovustrukturumenupouzitelnunavykreslenie">getPreprocessedMenuData - z korena menu vyrobi novu datovu strukturu menu pouzitelnu na vykreslenie</a></li><li><a href="global.html#isValidDateStr">isValidDateStr</a></li><li><a href="global.html#isValidEcv">isValidEcv</a></li><li><a href="global.html#isValidID">isValidID</a></li><li><a href="global.html#isValidMail">isValidMail</a></li><li><a href="global.html#isValidPasswordStrong">isValidPasswordStrong</a></li><li><a href="global.html#isValidPhone">isValidPhone</a></li></ul>
</nav>

<br class="clear">

<footer>
    Documentation generated by <a href="https://github.com/jsdoc/jsdoc">JSDoc 3.6.6</a> on Thu Jan 07 2021 13:35:30 GMT+0100 (GMT+01:00)
</footer>

<script> prettyPrint(); </script>
<script src="scripts/linenumber.js"> </script>
</body>
</html>
