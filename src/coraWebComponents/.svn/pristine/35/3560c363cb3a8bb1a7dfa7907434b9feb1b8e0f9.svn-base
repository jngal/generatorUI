<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <title>JSDoc: Source: grid/GridWrapper.js</title>

    <script src="scripts/prettify/prettify.js"> </script>
    <script src="scripts/prettify/lang-css.js"> </script>
    <!--[if lt IE 9]>
      <script src="//html5shiv.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]-->
    <link type="text/css" rel="stylesheet" href="styles/prettify-tomorrow.css">
    <link type="text/css" rel="stylesheet" href="styles/jsdoc-default.css">
</head>

<body>

<div id="main">

    <h1 class="page-title">Source: grid/GridWrapper.js</h1>

    



    
    <section>
        <article>
            <pre class="prettyprint source linenums"><code>import React from 'react';
import PropTypes from 'prop-types';
import Grid from './Grid';
import _ from 'lodash';
import eventEmitter from '../utils/eventEmitter';
import withRouter from '../utils/withRouter';
import flags from '../utils/flags';

/**
 * Grid Component 
 * @module
 * @param {bool} [allColumns] - All colums
 * @param {func} [cellRender] - Cell render function
 * @param {bool} [cellSelect] - Cell select
 * @param {string} [className] - Class name
 * @param {array} [contextMenu] - Context menu
 * @param {array} data - Data
 * @param {any} [detail] - Detail
 * @param {number} [disabled] - Disabled
 * @param {string} [discardText] - Discard text
 * @param {bool} [editable] - Editable
 * @param {func} [enterEdit] - Enter edit function
 * @param {object} [fixedFilter] - Fixed filter
 * @param {number} [hidden] - Hidden
 * @param {bool} [changeTabDisable] - Change tab disable
 * @param {object} [initFilter] - Init filter
 * @param {array} [initSort] - Init sort 
 * @param {bool} isLoading - Is loading
 * @param {bool} [modified] - Modified
 * @param {bool} [multiple] - Multiple
 * @param {func} [onAdd] - Function invoked on entry add
 * @param {func} [onCancel] - Function invoked on entry cancel
 * @param {func} [onContextMenuSelect] - On context menu select function
 * @param {func} [onCopy] - Function invoked on entry copy
 * @param {func} [onCopyAdditional] - On copy additional function
 * @param {func} [onDelete] - Function invoked on entry delete
 * @param {func} [onExpandChange] - On expand change function
 * @param {func} onGet - On get function
 * @param {func} onGetList - On get list function
 * @param {func} [onGetSchema] - On get schema function
 * @param {func} onChange - On change function
 * @param {func} [onChangeField] - On chage field function
 * @param {func} [onRowDoubleClick] - On row double click function
 * @param {func} [onSelect] - On select function
 * @param {func} [onUpdate] - On update function
 * @param {object} [parentProps] - Parent props
 * @param {string} primaryField - Primary field
 * @param {bool} [printable] - Printable
 * @param {bool} [rememberSelection] - Remember selection
 * @param {func} [rowProps] - Row props function
 * @param {array} schema - Grid schema
 * @param {array} [selected] - Selected entries
 * @param {any} [toolbarActions] - Toolbar actions
 * @param {bool} [toolbarHidden] - Toolbar hidden
 * @param {number} total - Defines the total number of data items in all pages
 * @param {bool} [userFilter] - User filter
 * @param {string} [filterField] - Filter field
 */
class GridWrapper extends React.Component {
  onGet = (id, fixedFilter = null) => {
    const { allColumns, data, onGet, primaryField } = this.props;

    if(allColumns) {
      let val;
      if(id === 0) {
        val = null;
      }
      else {
        val = { Data: data.find(x => x[primaryField] === id) }
      }
      onGet(val);
    }
    else {
      onGet(id, fixedFilter);
    }
  }

  initDetail = () => {
    const { history } = this.props;

    const urlParams = new URLSearchParams(history.location.search);
    const id = urlParams.get('id');
    if(id) {
      this.onGet(id);
      this.changeTab();
    }
  }

  onAdd = (event) => {
    this.onGet(0, this.props.fixedFilter);
    if(!this.props.changeTabDisable){
      this.changeTab();
    }
    if (_.isFunction(this.props.onSelect)) {
      this.props.onSelect([]);
    }
  }

  onCopy = async () => {
    this.props.onChangeField(this.props.primaryField, 0);
    if(this.props.onCopyAdditional){
      await this.props.onCopyAdditional();
    }
    this.changeTab();
  }

  changeTab = () => {
    eventEmitter.changeTab(this.props.primaryField, 1);
  }

  onSelect = (selected, isCopy = false) => {
    const { onSelect, primaryField } = this.props;

    if (selected.length === 1) {
      this.onGet(selected[0][primaryField]);
    }
    else {
      if(!isCopy) {
        this.onGet(0);
      }
    }

    if (_.isFunction(onSelect)) {
      onSelect(selected);
    }
  }

  onDelete = async (selected) => {
    const { onGetList, onDelete, primaryField } = this.props;

    await onDelete(selected[primaryField]);
    this.onGet(0);
    onGetList();
  }

  onCancel = async (selected) => {
    const { onGetList, onCancel, primaryField } = this.props;

    await onCancel(selected[primaryField]);
    this.onGet(selected[primaryField]);
    onGetList();
  }

  processFilter = (filter) => {
    if(!this.props.fixedFilter) {
      return filter;
    }

    return {filters: [...filter.filters, ...this.props.fixedFilter.filters]};
  }

  onChange = (filter, sort, page) => {
    const { onGetList, onChange } = this.props;
    onChange(this.processFilter(filter), sort, page);
    onGetList();
  }

  componentDidMount() {
    this.initDetail();
  }

  getHidden = () => {
    let { hidden } = this.props;
    
    if(!this.props.printable) {
      hidden |= flags.PRINT;
    }

    if(process.env.REACT_APP_NAME !== 'VISCO') {
      hidden |= flags.RESET;
      hidden |= flags.DELETEALL;
    }
    
    if(!this.props.editable) {
      hidden |= flags.EDIT;
    }

    if(!this.props.editableAll) {
      hidden |= flags.EDITALL;
    }

    if(!this.props.editableCell) {
      hidden |= flags.EDITCELL;
    }

    if(!this.props.userFilter){
      hidden |= flags.USER_FILTER;
    }

    return hidden;
  }

  getDisabled = () => {
    let { disabled } = this.props;

    if(process.env.REACT_APP_NAME !== 'VISCO') {
      disabled |= flags.DELETEALL;
    }

    return disabled;
  }

  render() {
    const hidden = this.getHidden();
    const disabled = this.getDisabled();

    return (
      &lt;Grid
        actions={this.props.actions}
        cellRender={this.props.cellRender}
        cellSelect={this.props.cellSelect}
        className={this.props.className}
        contextMenu={this.props.contextMenu}
        data={this.props.data}
        detail={this.props.detail}
        disabled={disabled}
        discardText={this.props.discardText}
        enterEdit={this.props.enterEdit}
        hidden={hidden}
        initFilter={this.props.initFilter}
        initSort={this.props.initSort}
        isLoading={this.props.isLoading}
        modified={this.props.modified}
        multiple={this.props.multiple}
        onAdd={this.props.onAdd ? this.props.onAdd : this.onAdd}
        onCancel={this.onCancel}
        onConfirm={this.changeTab}
        onContextMenuSelect={this.props.onContextMenuSelect}
        onCopy={this.props.onCopy ? this.props.onCopy : this.onCopy}
        onDelete={this.onDelete}
        onExpandChange={this.props.onExpandChange}
        onGetSchema={this.props.onGetSchema}
        onChange={this.onChange}
        onRowDoubleClick={this.props.onRowDoubleClick}
        onSelect={this.onSelect}
        onUpdate={this.props.onUpdate}
        parentProps={this.props.parentProps}
        primaryField={this.props.primaryField}
        rememberSelection={this.props.rememberSelection}
        rowProps={this.props.rowProps}
        selected={this.props.selected}
        schema={this.props.schema}
        toolbarActions={this.props.toolbarActions}
        toolbarHidden={this.props.toolbarHidden}
        total={this.props.total}
        filterField={this.props.filterField}
      />
    )
  }

}

GridWrapper.propTypes = {
  allColumns: PropTypes.bool,
  cellRender: PropTypes.func,
  cellSelect: PropTypes.bool,
  className: PropTypes.string,
  contextMenu: PropTypes.array,
  data: PropTypes.array.isRequired,
  detail: PropTypes.any,
  disabled: PropTypes.number,
  discardText: PropTypes.string,
  editable: PropTypes.bool,
  enterEdit: PropTypes.func,
  fixedFilter: PropTypes.object,
  hidden: PropTypes.number,
  changeTabDisable: PropTypes.bool,
  initFilter: PropTypes.object,
  initSort: PropTypes.array,
  isLoading: PropTypes.bool.isRequired,
  modified: PropTypes.bool,
  multiple: PropTypes.bool,
  onAdd: PropTypes.func,
  onCancel: PropTypes.func,
  onContextMenuSelect: PropTypes.func,
  onCopy: PropTypes.func,
  onCopyAdditional: PropTypes.func,
  onDelete: PropTypes.func,
  onExpandChange: PropTypes.func,
  onGet: PropTypes.func.isRequired,
  onGetList: PropTypes.func.isRequired,
  onGetSchema: PropTypes.func,
  onChange: PropTypes.func.isRequired,
  onChangeField: PropTypes.func,
  onRowDoubleClick: PropTypes.func,
  onSelect: PropTypes.func,
  onUpdate: PropTypes.func,
  parentProps: PropTypes.object,
  primaryField: PropTypes.string.isRequired,
  printable: PropTypes.bool,
  rememberSelection: PropTypes.bool,
  rowProps: PropTypes.func,
  selected: PropTypes.array,
  schema: PropTypes.array.isRequired,
  toolbarActions: PropTypes.any,
  toolbarHidden: PropTypes.bool,
  total: PropTypes.number.isRequired,
  userFilter: PropTypes.bool,
  filterField: PropTypes.string
}

export default withRouter(GridWrapper);</code></pre>
        </article>
    </section>




</div>

<nav>
    <h2><a href="index.html">Home</a></h2><h3>Modules</h3><ul><li><a href="module-Alert.html">Alert</a></li><li><a href="module-animation_Slide.html">animation/Slide</a></li><li><a href="module-buttons_Button.html">buttons/Button</a></li><li><a href="module-buttons_ButtonGroup.html">buttons/ButtonGroup</a></li><li><a href="module-buttons_DropDownButton.html">buttons/DropDownButton</a></li><li><a href="module-buttons_SplitButton.html">buttons/SplitButton</a></li><li><a href="module-ChangePassword.html">ChangePassword</a></li><li><a href="module-chart_ChartComponent.html">chart/ChartComponent</a></li><li><a href="module-chart_elements_ChartCategoryAxisComponent.html">chart/elements/ChartCategoryAxisComponent</a></li><li><a href="module-chart_elements_ChartLegendComponent.html">chart/elements/ChartLegendComponent</a></li><li><a href="module-chart_elements_ChartSeriesComponent.html">chart/elements/ChartSeriesComponent</a></li><li><a href="module-chart_elements_ChartTitleComponent.html">chart/elements/ChartTitleComponent</a></li><li><a href="module-Container.html">Container</a></li><li><a href="module-detail_Detail.html">detail/Detail</a></li><li><a href="module-detail_DetailWrapper.html">detail/DetailWrapper</a></li><li><a href="module-detail_Toolbar.html">detail/Toolbar</a></li><li><a href="module-detail_ValidationMessage.html">detail/ValidationMessage</a></li><li><a href="module-dialogs_ConfirmDialog.html">dialogs/ConfirmDialog</a></li><li><a href="module-dialogs_Dialog.html">dialogs/Dialog</a></li><li><a href="module-dialogs_DialogContent.html">dialogs/DialogContent</a></li><li><a href="module-dialogs_EmailPrompt.html">dialogs/EmailPrompt</a></li><li><a href="module-dialogs_FileContent.html">dialogs/FileContent</a></li><li><a href="module-dialogs_FileDialog.html">dialogs/FileDialog</a></li><li><a href="module-dialogs_ReportDialog.html">dialogs/ReportDialog</a></li><li><a href="module-Dropdown.html">Dropdown</a></li><li><a href="module-forms_Autocomplete.html">forms/Autocomplete</a></li><li><a href="module-forms_AutocompleteLocal.html">forms/AutocompleteLocal</a></li><li><a href="module-forms_Checkbox.html">forms/Checkbox</a></li><li><a href="module-forms_DatePicker.html">forms/DatePicker</a></li><li><a href="module-forms_DateRangePicker.html">forms/DateRangePicker</a></li><li><a href="module-forms_DateTimePicker.html">forms/DateTimePicker</a></li><li><a href="module-forms_DropDownList.html">forms/DropDownList</a></li><li><a href="module-forms_Input.html">forms/Input</a></li><li><a href="module-forms_MultiSelect.html">forms/MultiSelect</a></li><li><a href="module-forms_NumericTextBox.html">forms/NumericTextBox</a></li><li><a href="module-forms_Picker.html">forms/Picker</a></li><li><a href="module-forms_Switch.html">forms/Switch</a></li><li><a href="module-forms_Textarea.html">forms/Textarea</a></li><li><a href="module-forms_TimePicker.html">forms/TimePicker</a></li><li><a href="module-forms_Upload.html">forms/Upload</a></li><li><a href="module-graph_ArcGauage.html">graph/ArcGauage</a></li><li><a href="module-grid_Cell.html">grid/Cell</a></li><li><a href="module-grid_ColumnMenu.html">grid/ColumnMenu</a></li><li><a href="module-grid_DialogFilter.html">grid/DialogFilter</a></li><li><a href="module-grid_DialogFilterForm.html">grid/DialogFilterForm</a></li><li><a href="module-grid_DropdownFilterCell.html">grid/DropdownFilterCell</a></li><li><a href="module-grid_EditBooleanCell.html">grid/EditBooleanCell</a></li><li><a href="module-grid_EditCommandCell.html">grid/EditCommandCell</a></li><li><a href="module-grid_EditDateTimeCell.html">grid/EditDateTimeCell</a></li><li><a href="module-grid_EditDropdownCell.html">grid/EditDropdownCell</a></li><li><a href="module-grid_EditPickerCell.html">grid/EditPickerCell</a></li><li><a href="module-grid_EditTimeCell.html">grid/EditTimeCell</a></li><li><a href="module-grid_FileCell.html">grid/FileCell</a></li><li><a href="module-grid_Grid.html">grid/Grid</a></li><li><a href="module-grid_GridWrapper.html">grid/GridWrapper</a></li><li><a href="module-grid_RangeFilterCell.html">grid/RangeFilterCell</a></li><li><a href="module-grid_SaveFilterDialog.html">grid/SaveFilterDialog</a></li><li><a href="module-grid_SelectionMenu.html">grid/SelectionMenu</a></li><li><a href="module-grid_Toolbar.html">grid/Toolbar</a></li><li><a href="module-grid_TooltipCell.html">grid/TooltipCell</a></li><li><a href="module-LoadingPanel.html">LoadingPanel</a></li><li><a href="module-metabase_Dashboard.html">metabase/Dashboard</a></li><li><a href="module-navigation_Hamburger.html">navigation/Hamburger</a></li><li><a href="module-navigation_Manual.html">navigation/Manual</a></li><li><a href="module-navigation_ManualDialogList.html">navigation/ManualDialogList</a></li><li><a href="module-navigation_ManualList.html">navigation/ManualList</a></li><li><a href="module-navigation_ManualPDF.html">navigation/ManualPDF</a></li><li><a href="module-navigation_ManualWrapper.html">navigation/ManualWrapper</a></li><li><a href="module-navigation_Navigation.html">navigation/Navigation</a></li><li><a href="module-navigation_Search.html">navigation/Search</a></li><li><a href="module-navigation_User.html">navigation/User</a></li><li><a href="module-RefreshDialog.html">RefreshDialog</a></li><li><a href="module-sch_ApprovalProcessStep.html">sch/ApprovalProcessStep</a></li><li><a href="module-sch_ApprovalProcessTimeline.html">sch/ApprovalProcessTimeline</a></li><li><a href="module-scheduler_Scheduler.html">scheduler/Scheduler</a></li><li><a href="module-Settings.html">Settings</a></li><li><a href="module-sidebar_Appmenu.html">sidebar/Appmenu</a></li><li><a href="module-sidebar_Footer.html">sidebar/Footer</a></li><li><a href="module-sidebar_header_Appmenu.html">sidebar/header/Appmenu</a></li><li><a href="module-sidebar_header_Header.html">sidebar/header/Header</a></li><li><a href="module-sidebar_header_SidebarToggle.html">sidebar/header/SidebarToggle</a></li><li><a href="module-sidebar_menu_Menu.html">sidebar/menu/Menu</a></li><li><a href="module-sidebar_menu_Search.html">sidebar/menu/Search</a></li><li><a href="module-sidebar_Sidebar.html">sidebar/Sidebar</a></li><li><a href="module-sidebar_Stats.html">sidebar/Stats</a></li><li><a href="module-Tab.html">Tab</a></li><li><a href="module-Tabs.html">Tabs</a></li><li><a href="module-TabsWrapper.html">TabsWrapper</a></li><li><a href="module-TitlePanel.html">TitlePanel</a></li><li><a href="module-utils_convert.html">utils/convert</a></li><li><a href="module-utils_coraError.html">utils/coraError</a></li><li><a href="module-utils_eventEmitter.html">utils/eventEmitter</a></li><li><a href="module-utils_flags.html">utils/flags</a></li><li><a href="module-utils_helper.html">utils/helper</a></li><li><a href="module-utils_logger.html">utils/logger</a></li><li><a href="module-utils_requests.html">utils/requests</a></li><li><a href="module-utils_storage.html">utils/storage</a></li><li><a href="module-ValidationAlert.html">ValidationAlert</a></li><li><a href="module-views_login_Login.html">views/login/Login</a></li><li><a href="module-views_registration_Registration.html">views/registration/Registration</a></li></ul><h3>Classes</h3><ul><li><a href="module-utils_coraError.html">utils/coraError</a></li><li><a href="module-utils_eventEmitter-ExtendedEventEmitter.html">ExtendedEventEmitter</a></li></ul><h3>Global</h3><ul><li><a href="global.html#getPreprocessedMenuData-zkorenamenuvyrobinovudatovustrukturumenupouzitelnunavykreslenie">getPreprocessedMenuData - z korena menu vyrobi novu datovu strukturu menu pouzitelnu na vykreslenie</a></li><li><a href="global.html#isValidDateStr">isValidDateStr</a></li><li><a href="global.html#isValidEcv">isValidEcv</a></li><li><a href="global.html#isValidID">isValidID</a></li><li><a href="global.html#isValidMail">isValidMail</a></li><li><a href="global.html#isValidPasswordStrong">isValidPasswordStrong</a></li><li><a href="global.html#isValidPhone">isValidPhone</a></li></ul>
</nav>

<br class="clear">

<footer>
    Documentation generated by <a href="https://github.com/jsdoc/jsdoc">JSDoc 3.6.6</a> on Thu Jan 07 2021 13:35:30 GMT+0100 (GMT+01:00)
</footer>

<script> prettyPrint(); </script>
<script src="scripts/linenumber.js"> </script>
</body>
</html>
