<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <title>JSDoc: Source: grid/DialogFilterForm.js</title>

    <script src="scripts/prettify/prettify.js"> </script>
    <script src="scripts/prettify/lang-css.js"> </script>
    <!--[if lt IE 9]>
      <script src="//html5shiv.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]-->
    <link type="text/css" rel="stylesheet" href="styles/prettify-tomorrow.css">
    <link type="text/css" rel="stylesheet" href="styles/jsdoc-default.css">
</head>

<body>

<div id="main">

    <h1 class="page-title">Source: grid/DialogFilterForm.js</h1>

    



    
    <section>
        <article>
            <pre class="prettyprint source linenums"><code>import * as React from 'react';
import PropTypes from 'prop-types';
import ExtendedDropDownList from '../forms/DropDownList';
import { DropDownList } from '@progress/kendo-react-dropdowns';
import Input from '../forms/Input';
import DatePicker from '../forms/DatePicker';
import NumericTextBox from '../forms/NumericTextBox';
import sk from '../res/sk.json';
import './DialogFilter.scss';

const FILTER_OPERATORS = {
  text: [
    { text: sk.grid.filterContainsOperator, operator: 'contains' },
    { text: sk.grid.filterNotContainsOperator, operator: 'doesnotcontain' },
    { text: sk.grid.filterEqOperator, operator: 'eq' },
    { text: sk.grid.filterNotEqOperator, operator: 'neq' },
    { text: sk.grid.filterStartsWithOperator, operator: 'startswith' },
    { text: sk.grid.filterEndsWithOperator, operator: 'endswith' },
    { text: sk.grid.filterIsEmptyOperator, operator: 'isempty' },
    { text: sk.grid.filterIsNotEmptyOperator, operator: 'isnotempty' }
  ],
  numeric: [
    { text: sk.grid.filterEqOperator, operator: 'eq' },
    { text: sk.grid.filterNotEqOperator, operator: 'neq' },
    { text: sk.grid.filterGteOperator, operator: 'gte' },
    { text: sk.grid.filterGtOperator, operator: 'gt' },
    { text: sk.grid.filterLteOperator, operator: 'lte' },
    { text: sk.grid.filterLtOperator, operator: 'lt' },
    { text: sk.grid.filterIsNullOperator, operator: 'isnull' },
    { text: sk.grid.filterIsNotNullOperator, operator: 'isnotnull' }
  ],
  date: [
    { text: sk.grid.filterEqOperator, operator: 'eq' },
    { text: sk.grid.filterNotEqOperator, operator: 'neq' },
    { text: sk.grid.filterAfterOrEqualOperator, operator: 'gte' },
    { text: sk.grid.filterAfterOperator, operator: 'gt' },
    { text: sk.grid.filterBeforeOperator, operator: 'lt' },
    { text: sk.grid.filterBeforeOrEqualOperator, operator: 'lte' },
    { text: sk.grid.filterIsNullOperator, operator: 'isnull' },
    { text: sk.grid.filterIsNotNullOperator, operator: 'isnotnull' }
  ],
  boolean: [
    { text: sk.grid.filterBooleanAll, operator: '' },
    { text: sk.grid.filterIsTrue, operator: true },
    { text: sk.grid.filterIsFalse, operator: false }
  ],
  container: [
    { text: sk.grid.filterContainsOperator, operator: 'contains' },
    { text: sk.grid.filterNotContainsOperator, operator: 'doesnotcontain' },
    { text: sk.grid.filterEqOperator, operator: 'eq' },
    { text: sk.grid.filterNotEqOperator, operator: 'neq' },
    { text: sk.grid.filterStartsWithOperator, operator: 'startswith' },
    { text: sk.grid.filterEndsWithOperator, operator: 'endswith' },
    { text: sk.grid.filterIsEmptyOperator, operator: 'isempty' },
    { text: sk.grid.filterIsNotEmptyOperator, operator: 'isnotempty' }
  ]
};


/**
 * Dialog fiter form component
 * @module
 * @param {array} schema - Schema
 * @param {object} [parentProps] - Parent props
 * @param {object} filter - Filter 
 * @param {string} enumDefault - Enum default value
 */
class DialogFilterForm extends React.Component {
  constructor(props) {
    super(props);

    this.state = {
      input: {}
    }
  }


  createInput = () => {
    let input = {};
    this.props.filter.filters.forEach(item => {
      input[item.field + 'Operator'] = item.operator;
      input[item.field + 'Value'] = item.value;
    });
    this.setState({ input });
  }

  componentDidMount() {
    this.createInput();
  }

  componentDidUpdate(prevProps) {
    if (this.props.filter !== prevProps.filter) {
      this.createInput();
    }
  }


  handleChange = (name, value) => {
    this.setState(prevState => ({
      input: {
        ...prevState.input,
        [name]: value ? (value.text ? value.operator : value) : null
      }
    }))
  }

  operatorSK = (item) => {
    let value
    if (item.filter === 'boolean') {
      value = this.state.input[item.field + 'Value'] === false ? false :
        (this.state.input[item.field + 'Value'] ? true : null)
    }
    else {
      value = this.state.input[item.field + 'Operator'] ? this.state.input[item.field + 'Operator'] : null
    }
    return FILTER_OPERATORS[item.filter &amp;&amp; item.filter !== "none" ? item.filter : 'text'].find(item => item.operator === value)
  }

  hasValue = (value) => {
    return value &amp;&amp; value !== this.props.enumDefault;
  }

  render() {
    return (
      &lt;div className="k-form-inline dialogFilter">
        {this.props.schema.map(item => {
          switch (item.filter) {

            case "cmd":
              return (
                &lt;div className="k-form-field" key={item.field}>

                &lt;/div>
              )
            case "enum":
              return (
                &lt;div className="k-form-field" key={item.field}>
                  &lt;span className="title">{item.title}&lt;/span>
                  &lt;div>&lt;/div>
                  &lt;div>
                    &lt;DropDownList
                      data={this.props.parentProps[item.dataField]}
                      onChange={(event) => {
                        const hasValue = this.hasValue(event.target.value);
                        this.handleChange(
                          item.field + 'Value',
                          hasValue ? event.target.value : '',
                        );
                      }}
                      value={this.state.input[item.field + 'Value'] || this.props.enumDefault}
                      defaultItem={this.props.enumDefault}
                    />
                  &lt;/div>
                &lt;/div>
              )
            case "boolean":
              return (
                &lt;div className="k-form-field" key={item.field}>
                  &lt;span className="title">{item.title}&lt;/span>
                  &lt;div>&lt;/div>
                  &lt;div>
                    &lt;ExtendedDropDownList
                      name={item.field + 'Value'}
                      data={FILTER_OPERATORS["boolean"]}
                      textField="text"
                      onChange={this.handleChange}
                      value={this.operatorSK(item)}
                    />
                  &lt;/div>
                &lt;/div>
              )

            case "date":
              return (
                &lt;div className="k-form-field" key={item.field}>
                  &lt;span className="title">{item.title}&lt;/span>
                  &lt;div>
                    &lt;ExtendedDropDownList
                      name={item.field + 'Operator'}
                      data={FILTER_OPERATORS["date"]}
                      textField="text"
                      onChange={this.handleChange}
                      value={this.operatorSK(item)}
                    />
                  &lt;/div>
                  &lt;DatePicker
                    name={item.field + 'Value'}
                    onChange={this.handleChange}
                    value={this.state.input[item.field + 'Value'] || null}
                  />
                &lt;/div>
              )

            case "numeric":
              return (
                &lt;div className="k-form-field" key={item.field}>
                  &lt;span className="title">{item.title}&lt;/span>
                  &lt;div>
                    &lt;ExtendedDropDownList
                      name={item.field + 'Operator'}
                      data={FILTER_OPERATORS["numeric"]}
                      textField="text"
                      onChange={this.handleChange}
                      value={this.operatorSK(item)}
                    />
                  &lt;/div>
                  &lt;NumericTextBox
                    name={item.field + 'Value'}
                    onChange={this.handleChange}
                    value={this.state.input[item.field + 'Value'] || null}
                  />
                &lt;/div>
              )

            default:
              return (
                &lt;div className="k-form-field" key={item.field}>
                  &lt;span className="title">{item.title}&lt;/span>
                  &lt;div>
                    &lt;ExtendedDropDownList
                      name={item.field + 'Operator'}
                      data={FILTER_OPERATORS["text"]}
                      textField="text"
                      onChange={this.handleChange}
                      value={this.operatorSK(item)}
                    />
                  &lt;/div>
                  &lt;Input
                    name={item.field + 'Value'}
                    onChange={this.handleChange}
                    value={this.state.input[item.field + 'Value'] || ""}
                  />
                &lt;/div>
              )
          }
        })}
      &lt;/div>
    );
  }
}


DialogFilterForm.propTypes = {
  schema: PropTypes.array.isRequired,
  parentProps: PropTypes.object,
  filter: PropTypes.object.isRequired,
  enumDefault: PropTypes.string.isRequired
}

export default DialogFilterForm;</code></pre>
        </article>
    </section>




</div>

<nav>
    <h2><a href="index.html">Home</a></h2><h3>Modules</h3><ul><li><a href="module-Alert.html">Alert</a></li><li><a href="module-animation_Slide.html">animation/Slide</a></li><li><a href="module-buttons_Button.html">buttons/Button</a></li><li><a href="module-buttons_ButtonGroup.html">buttons/ButtonGroup</a></li><li><a href="module-buttons_DropDownButton.html">buttons/DropDownButton</a></li><li><a href="module-buttons_SplitButton.html">buttons/SplitButton</a></li><li><a href="module-ChangePassword.html">ChangePassword</a></li><li><a href="module-chart_ChartComponent.html">chart/ChartComponent</a></li><li><a href="module-chart_elements_ChartCategoryAxisComponent.html">chart/elements/ChartCategoryAxisComponent</a></li><li><a href="module-chart_elements_ChartLegendComponent.html">chart/elements/ChartLegendComponent</a></li><li><a href="module-chart_elements_ChartSeriesComponent.html">chart/elements/ChartSeriesComponent</a></li><li><a href="module-chart_elements_ChartTitleComponent.html">chart/elements/ChartTitleComponent</a></li><li><a href="module-Container.html">Container</a></li><li><a href="module-detail_Detail.html">detail/Detail</a></li><li><a href="module-detail_DetailWrapper.html">detail/DetailWrapper</a></li><li><a href="module-detail_Toolbar.html">detail/Toolbar</a></li><li><a href="module-detail_ValidationMessage.html">detail/ValidationMessage</a></li><li><a href="module-dialogs_ConfirmDialog.html">dialogs/ConfirmDialog</a></li><li><a href="module-dialogs_Dialog.html">dialogs/Dialog</a></li><li><a href="module-dialogs_DialogContent.html">dialogs/DialogContent</a></li><li><a href="module-dialogs_EmailPrompt.html">dialogs/EmailPrompt</a></li><li><a href="module-dialogs_FileContent.html">dialogs/FileContent</a></li><li><a href="module-dialogs_FileDialog.html">dialogs/FileDialog</a></li><li><a href="module-dialogs_ReportDialog.html">dialogs/ReportDialog</a></li><li><a href="module-Dropdown.html">Dropdown</a></li><li><a href="module-forms_Autocomplete.html">forms/Autocomplete</a></li><li><a href="module-forms_AutocompleteLocal.html">forms/AutocompleteLocal</a></li><li><a href="module-forms_Checkbox.html">forms/Checkbox</a></li><li><a href="module-forms_DatePicker.html">forms/DatePicker</a></li><li><a href="module-forms_DateRangePicker.html">forms/DateRangePicker</a></li><li><a href="module-forms_DateTimePicker.html">forms/DateTimePicker</a></li><li><a href="module-forms_DropDownList.html">forms/DropDownList</a></li><li><a href="module-forms_Input.html">forms/Input</a></li><li><a href="module-forms_MultiSelect.html">forms/MultiSelect</a></li><li><a href="module-forms_NumericTextBox.html">forms/NumericTextBox</a></li><li><a href="module-forms_Picker.html">forms/Picker</a></li><li><a href="module-forms_Switch.html">forms/Switch</a></li><li><a href="module-forms_Textarea.html">forms/Textarea</a></li><li><a href="module-forms_TimePicker.html">forms/TimePicker</a></li><li><a href="module-forms_Upload.html">forms/Upload</a></li><li><a href="module-graph_ArcGauage.html">graph/ArcGauage</a></li><li><a href="module-grid_Cell.html">grid/Cell</a></li><li><a href="module-grid_ColumnMenu.html">grid/ColumnMenu</a></li><li><a href="module-grid_DialogFilter.html">grid/DialogFilter</a></li><li><a href="module-grid_DialogFilterForm.html">grid/DialogFilterForm</a></li><li><a href="module-grid_DropdownFilterCell.html">grid/DropdownFilterCell</a></li><li><a href="module-grid_EditBooleanCell.html">grid/EditBooleanCell</a></li><li><a href="module-grid_EditCommandCell.html">grid/EditCommandCell</a></li><li><a href="module-grid_EditDateTimeCell.html">grid/EditDateTimeCell</a></li><li><a href="module-grid_EditDropdownCell.html">grid/EditDropdownCell</a></li><li><a href="module-grid_EditPickerCell.html">grid/EditPickerCell</a></li><li><a href="module-grid_EditTimeCell.html">grid/EditTimeCell</a></li><li><a href="module-grid_FileCell.html">grid/FileCell</a></li><li><a href="module-grid_Grid.html">grid/Grid</a></li><li><a href="module-grid_GridWrapper.html">grid/GridWrapper</a></li><li><a href="module-grid_RangeFilterCell.html">grid/RangeFilterCell</a></li><li><a href="module-grid_SaveFilterDialog.html">grid/SaveFilterDialog</a></li><li><a href="module-grid_SelectionMenu.html">grid/SelectionMenu</a></li><li><a href="module-grid_Toolbar.html">grid/Toolbar</a></li><li><a href="module-grid_TooltipCell.html">grid/TooltipCell</a></li><li><a href="module-LoadingPanel.html">LoadingPanel</a></li><li><a href="module-metabase_Dashboard.html">metabase/Dashboard</a></li><li><a href="module-navigation_Hamburger.html">navigation/Hamburger</a></li><li><a href="module-navigation_Manual.html">navigation/Manual</a></li><li><a href="module-navigation_ManualDialogList.html">navigation/ManualDialogList</a></li><li><a href="module-navigation_ManualList.html">navigation/ManualList</a></li><li><a href="module-navigation_ManualPDF.html">navigation/ManualPDF</a></li><li><a href="module-navigation_ManualWrapper.html">navigation/ManualWrapper</a></li><li><a href="module-navigation_Navigation.html">navigation/Navigation</a></li><li><a href="module-navigation_Search.html">navigation/Search</a></li><li><a href="module-navigation_User.html">navigation/User</a></li><li><a href="module-RefreshDialog.html">RefreshDialog</a></li><li><a href="module-sch_ApprovalProcessStep.html">sch/ApprovalProcessStep</a></li><li><a href="module-sch_ApprovalProcessTimeline.html">sch/ApprovalProcessTimeline</a></li><li><a href="module-scheduler_Scheduler.html">scheduler/Scheduler</a></li><li><a href="module-Settings.html">Settings</a></li><li><a href="module-sidebar_Appmenu.html">sidebar/Appmenu</a></li><li><a href="module-sidebar_Footer.html">sidebar/Footer</a></li><li><a href="module-sidebar_header_Appmenu.html">sidebar/header/Appmenu</a></li><li><a href="module-sidebar_header_Header.html">sidebar/header/Header</a></li><li><a href="module-sidebar_header_SidebarToggle.html">sidebar/header/SidebarToggle</a></li><li><a href="module-sidebar_menu_Menu.html">sidebar/menu/Menu</a></li><li><a href="module-sidebar_menu_Search.html">sidebar/menu/Search</a></li><li><a href="module-sidebar_Sidebar.html">sidebar/Sidebar</a></li><li><a href="module-sidebar_Stats.html">sidebar/Stats</a></li><li><a href="module-Tab.html">Tab</a></li><li><a href="module-Tabs.html">Tabs</a></li><li><a href="module-TabsWrapper.html">TabsWrapper</a></li><li><a href="module-TitlePanel.html">TitlePanel</a></li><li><a href="module-utils_convert.html">utils/convert</a></li><li><a href="module-utils_coraError.html">utils/coraError</a></li><li><a href="module-utils_eventEmitter.html">utils/eventEmitter</a></li><li><a href="module-utils_flags.html">utils/flags</a></li><li><a href="module-utils_helper.html">utils/helper</a></li><li><a href="module-utils_logger.html">utils/logger</a></li><li><a href="module-utils_requests.html">utils/requests</a></li><li><a href="module-utils_storage.html">utils/storage</a></li><li><a href="module-ValidationAlert.html">ValidationAlert</a></li><li><a href="module-views_login_Login.html">views/login/Login</a></li><li><a href="module-views_registration_Registration.html">views/registration/Registration</a></li></ul><h3>Classes</h3><ul><li><a href="module-utils_coraError.html">utils/coraError</a></li><li><a href="module-utils_eventEmitter-ExtendedEventEmitter.html">ExtendedEventEmitter</a></li></ul><h3>Global</h3><ul><li><a href="global.html#getPreprocessedMenuData-zkorenamenuvyrobinovudatovustrukturumenupouzitelnunavykreslenie">getPreprocessedMenuData - z korena menu vyrobi novu datovu strukturu menu pouzitelnu na vykreslenie</a></li><li><a href="global.html#isValidDateStr">isValidDateStr</a></li><li><a href="global.html#isValidEcv">isValidEcv</a></li><li><a href="global.html#isValidID">isValidID</a></li><li><a href="global.html#isValidMail">isValidMail</a></li><li><a href="global.html#isValidPasswordStrong">isValidPasswordStrong</a></li><li><a href="global.html#isValidPhone">isValidPhone</a></li></ul>
</nav>

<br class="clear">

<footer>
    Documentation generated by <a href="https://github.com/jsdoc/jsdoc">JSDoc 3.6.6</a> on Thu Jan 07 2021 13:35:30 GMT+0100 (GMT+01:00)
</footer>

<script> prettyPrint(); </script>
<script src="scripts/linenumber.js"> </script>
</body>
</html>
